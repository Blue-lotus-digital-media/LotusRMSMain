@using LotusRMS.Models.Viewmodels.product
@model ProductVM

@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    
    var title = "Create Product";
}

<form method="post" enctype="multipart/form-data">
    <div class="row p-3 border">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        @if (Model.Product.Id != Guid.Empty)
        {
            //edit
            title = "Edit Product";
            <input type="hidden" asp-for="Product.Id" />
        }
        <div class="col-12 border-bottom">
            <h2 class="text-primary">@title</h2>
        </div>
        <div class="col-8 pt-4">
            <div class="form-group row">
                <div class="col-4">
                    <label asp-for="Product.Product_Name"></label>
                </div>
                <div class="col-8">
                    <input asp-for="Product.Product_Name" class="form-control" />
                    <span asp-validation-for="Product.Product_Name" class="text-danger"></span>
                </div>
            </div>
            <div class="form-group row">
                <div class="col-4">
                    <label asp-for="Product.Product_Description"></label>
                </div>
                <div class="col-8">
                    <input asp-for="Product.Product_Description" class="form-control" />
                    <span asp-validation-for="Product.Product_Description" class="text-danger"></span>
                </div>
            </div>
           
          
           
            
          
            <div class="form-group row">
                <div class="col-4">
                    Category
                </div>
                <div class="col-8">
                   <select asp-for="Product.Product_Category_Id" class="form-control">
                       <option >Select a category</option>
                       @foreach(var item in Model.CategoryList){
                           <option value="@item.Value">@item.Text</option>
                       }
                   </select>
                   <span asp-validation-for="Product.Product_Category_Id" class="text-danger"></span>
                </div>
            </div>
            <div class="form-group row">
                <div class="col-4">
                    Cover Type
                </div>
                <div class="col-8">
                  <select asp-for="Product.Product_Unit_Id" class="form-control">
                       <option >Select a unit</option>
                       @foreach(var item in Model.UnitList){
                           <option value="@item.Value">@item.Text</option>
                       }
                   </select>
                    <span asp-validation-for="Product.Product_Unit_Id" class="text-danger"></span>
                </div>
            </div>
            
            <div class="form-group row">
                <div class="col-8 offset-4">
                    @if (Model.Product.Id != Guid.Empty)
                    {
                        <partial name="_EditAndBackToListButton" model="Model.Product.Id" />
                    }
                    else
                    {
                <div class="row">
                    <div class="col">
                        <button type="submit" onclick="return validateInput()" class="btn btn-primary form-control">Create</button>
                    </div>
                    <div class="col">
                        <a asp-action="Index" class="btn btn-success form-control">Back to List</a>
                    </div>
                </div>
                    }
                </div>
            </div>
        </div>
        
    </div>
</form>

